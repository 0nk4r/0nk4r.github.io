---
title: "Modelling complex traits with ancestral recombination graphs"
author: "Hanbin Lee"
affiliation: "University of Michigan, Ann Arbor"
email: "hblee@umich.edu"
venue: "Probabilistic Modelling in Genomics 2025"
date: "07 March 2025"
date-format: "MMM D, YYYY"
bibliography: ref.bib
format: 
  revealjs:
    slide-number: c/t
    width: 1600
    height: 900
    html-math-method: mathjax
    theme: white
    transition: slide
---

# Overview

::: {.incremental}
- We condition on the sample's ancestral recombination graph (ARG) 
- The full feature of the ARG is superfluous, only the local trees matter $\mathcal{T} = (\mathbf{V}, \mathbf{E})$
![](imgs/local_trees.svg)

- Drift and recombination are fixed, only mutation is left to vary
$$
\mathbf{y} \mid \mathcal{T} \; \sim \; ?
$$
:::

::: footer
Figure from [tskit docs](https://tskit.dev/tutorials/what_is.html)
:::


# Linear model

The trait is a linear function of $y$
$$
\mathbf{y} = \mathbf{G}\boldsymbol{\beta} + \boldsymbol{\varepsilon}
$$
$\mathbf{y} \in \mathbb{R}^N$, $\mathbf{G} \in \mathbb{R}^{N \times P}$, 
$\boldsymbol{\beta} \in \mathbb{R}^P$, and $\boldsymbol{\varepsilon} \in \mathbb{R}^N$

::: {.incremental}
- $N \ll P$, high-dimensional regression needs a fix
- Perfect collinearity of some columns in $\mathbf{G}$, or perfect LD
- A population genetic solution: group variants into branches
:::

## Edge splitting

::: {.incremental}
- Nodes and edges are reused across multiple trees in a tree sequence
- Edges, in particular, may not have a unique set of samples along its span
- Salehi Nowbandegani and colleagues *bricked* the edges to divide them [@SalehiNowbandegani2023]
- Henceforth, we assume that edges are splitted to have a unique subtopology
$$
\mathbf{Z}_{ne} = \text{The number of haplotypes of individual $n$ that inherit $e$} 
$$
The overall matrix $\mathbf{Z}$ is an individual-edge design matrix.
:::


## How to gather edges

::: {.incremental}
- When does an individual posess a derived allele? (ancestral=$0$, derived=$1$)
- An individual is should be a descendant of an edge
- And that edge should have a mutation
- Let $\mathbf{1}_{ep}$ be the indicator *random* variable of a mutation at edge $e$ and position $p$
$$
\mathbf{G}_{np} = \sum_{e: p \in e} \mathbf{Z}_{np} \mathbf{1}_{ep} \quad \Leftrightarrow \quad \mathbf{G}_p = \sum_{e:p \in e} \mathbf{Z}_{e} \mathbf{1}_{ep}
$$
:::

## Exchange the summations

Recall $\mathbf{G}_p = \sum_{e:p \in e} \mathbf{Z}_{e} \mathbf{1}_{ep}$

$$
\begin{aligned}
\mathbf{y} &= \sum_{p=1}^P \mathbf{G}_p \boldsymbol{\beta}_p + \boldsymbol{\varepsilon} \\
		&= \color{grey}{\sum_{p=1}^P \sum_{e:p \in e}} \mathbf{Z}_e \boldsymbol{\beta}_p \mathbf{1}_{ep} + \boldsymbol{\varepsilon} \\
		&= \color{red}{\sum_{e=1}^E \sum_{p:p \in e}} \mathbf{Z}_e \boldsymbol{\beta}_p \mathbf{1}_{ep} + \boldsymbol{\varepsilon} \\
		&= \sum_{e=1}^E \mathbf{Z}_e \color{blue}{\left(\sum_{p:p\in e} \boldsymbol{\beta}_p \mathbf{1}_{ep} \right)} + \boldsymbol{\varepsilon} \\
		&= \sum_{e=1}^E \mathbf{Z}_e \color{blue}{\boldsymbol{\upsilon}_e} + \boldsymbol{\varepsilon} \\
		&= \mathbf{Z} \boldsymbol{\upsilon} + \boldsymbol{\varepsilon}
\end{aligned}
$$

## References
This are the references

::: {#refs}
:::


